<Window x:Class="CurrencyConvertor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CurrencyConvertor"
        mc:Ignorable="d"
        Name="CurrencyConversionWindow"
        Title="Currency Converter - Celonis Challenge Complete" Height="500" Width="900">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="DatePickerStyle" TargetType="DatePicker">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="HeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="StatusStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontStyle" Value="Italic"/>
        </Style>
        <Style x:Key="AutoRefreshStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="DarkBlue"/>
        </Style>
        <Style x:Key="CacheStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="DarkGreen"/>
        </Style>
    </Window.Resources>

    <Grid>
        <DockPanel Name="MainPanel">
            <!-- Header -->
            <TextBlock Text="Currency Converter - Celonis Challenge Complete" DockPanel.Dock="Top" Style="{StaticResource HeaderStyle}"/>

            <!-- Status Bar with Cache Information -->
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Background="LightGray" Height="35">
                <TextBlock Text="{Binding StatusMessage}" Style="{StaticResource StatusStyle}" />
                <ProgressBar Width="100" Height="15" Margin="10,5" IsIndeterminate="{Binding IsLoading}" 
                       Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Separator Background="{x:Static Brushes.Gray}" Width="2" Margin="10,0"/>
                <TextBlock Text="{Binding AutoRefreshStatus}" Style="{StaticResource AutoRefreshStyle}" />
                <Separator Background="{x:Static Brushes.Gray}" Width="2" Margin="10,0"/>
                <TextBlock Text="Cache: Thread-Safe Query Caching Active" Style="{StaticResource CacheStyle}" />
            </StackPanel>

            <!-- Input Controls -->
            <StackPanel DockPanel.Dock="Top" Name="SourceCurrencyPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Amount:" Style="{StaticResource TextBlockStyle}"/>
                <TextBox Name="SourceCurrencyTextBox" 
                     Text="{Binding Amount, UpdateSourceTrigger=PropertyChanged}" 
                     Style="{StaticResource TextBoxStyle}"/>
                <TextBlock Text="From:" Style="{StaticResource TextBlockStyle}"/>
                <ComboBox Name="SourceCurrencyComboBox" 
                      ItemsSource="{Binding Currencies}"
                      SelectedItem="{Binding SelectedFromCurrency}"
                      Style="{StaticResource ComboBoxStyle}"/>
            </StackPanel>

            <!-- Result Display -->
            <StackPanel DockPanel.Dock="Top" Name="TargetCurrencyPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Result:" Style="{StaticResource TextBlockStyle}"/>
                <TextBlock Name="LatestAmountTextBlock" 
                       Text="{Binding ConversionResult}"
                       Style="{StaticResource TextBlockStyle}" MinWidth="150"/>
                <TextBlock Text="To:" Style="{StaticResource TextBlockStyle}"/>
                <ComboBox Name="TargetCurrencyComboBox" 
                      ItemsSource="{Binding Currencies}"
                      SelectedItem="{Binding SelectedToCurrency}"
                      Style="{StaticResource ComboBoxStyle}" />
                <TextBlock Name="LatestDateTextBlock" 
                       Text="{Binding ConversionDate}"
                       Style="{StaticResource TextBlockStyle}" />
            </StackPanel>

            <!-- Control Buttons -->
            <StackPanel DockPanel.Dock="Top" Name="ControlButtonsPanel" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,10">
                <Button Content="Refresh Currencies" 
                    Command="{Binding RefreshCurrenciesCommand}"
                    Margin="5" Padding="10,5" Background="LightBlue"/>
                <Button Name="ToggleAutoRefreshButton"
                    Command="{Binding ToggleAutoRefreshCommand}"
                    Margin="5" Padding="10,5" Background="LightGreen">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="Start Auto-Refresh"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AutoRefreshEnabled}" Value="True">
                                    <Setter Property="Content" Value="Stop Auto-Refresh"/>
                                    <Setter Property="Background" Value="LightCoral"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <!-- Date Range Selection with Cache Note -->
            <StackPanel DockPanel.Dock="Top" Name="TimeRangeStackPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Historical Data Between" Style="{StaticResource TextBlockStyle}"/>
                <DatePicker Name="StartDatePicker" 
                       SelectedDate="{Binding StartDate}"
                       Style="{StaticResource DatePickerStyle}"/>
                <TextBlock Text="and" Style="{StaticResource TextBlockStyle}"/>
                <DatePicker Name="EndDatePicker" 
                       SelectedDate="{Binding EndDate}"
                       Style="{StaticResource DatePickerStyle}"/>
                <Button Content="Load Historical Data" 
                    Command="{Binding LoadHistoricalDataCommand}"
                    Margin="10,5" Padding="10,3"/>
                <TextBlock Text="(Cached for performance)" 
                       Style="{StaticResource CacheStyle}" 
                       FontStyle="Italic"/>
            </StackPanel>

            <!-- Historical Data Grid -->
            <Grid Name="HistoricalDataGrid" Margin="5">
                <DataGrid ItemsSource="{Binding HistoricalRates}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      GridLinesVisibility="Horizontal"
                      HeadersVisibility="Column"
                      AlternatingRowBackground="LightBlue">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" 
                                      Binding="{Binding FormattedDate}" 
                                      Width="120"/>
                        <DataGridTextColumn Header="From" 
                                      Binding="{Binding FromCurrency}" 
                                      Width="80"/>
                        <DataGridTextColumn Header="To" 
                                      Binding="{Binding ToCurrency}" 
                                      Width="80"/>
                        <DataGridTextColumn Header="Exchange Rate" 
                                      Binding="{Binding FormattedRate}" 
                                      Width="120"/>
                    </DataGrid.Columns>
                    <DataGrid.Style>
                        <Style TargetType="DataGrid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HistoricalRates.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                </DataGrid>

                <!-- Placeholder when no data -->
                <Border Background="LightGray">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HistoricalRates.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Select date range and currencies to view historical data" 
                               Style="{StaticResource HeaderStyle}" 
                               FontSize="14"
                               HorizontalAlignment="Center"/>
                        <TextBlock Text="Repeated queries use thread-safe caching with configurable eviction" 
                               Style="{StaticResource CacheStyle}" 
                               FontSize="12"
                               HorizontalAlignment="Center"
                               Margin="0,5,0,0"/>
                    </StackPanel>
                </Border>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
